****************** Javascript Execution Context *********************

{} is the Global Execution Context accessed through "this" keyword.
This keyword return differenet object depending upon whether running in node environment or Browser.

Javascript is single-threaded and everything runs in a process.

Three types of Execution Context;
01. Global Execution Context
02. Function Execution Context
03. Eval Execution Context


Phases of JS EC: -
01. Global Execution Phase --> This keyword

02. Memory Creation Phase --> 
        variables : undefined
        function : definition

03. Execution Phase -->
        variables : gets assigned or its values
        function : creates new execution context (New variable environment + Execution thread)
                    again whole process or phases (Memory and Execution) gets executed for a particular function
                    The return value goes into the Global Execution Phase
                    After the whole process gets over, the new EC gets deleted.


*********************** Call Stack ****************************
First is always Global EC
Then if there is nested functions --> then LIFO (Last In First Out) principle follows
Example in Google Chrome inspect sources snippet.js